#!/bin/sh

# Installs 4store on Debian and compatible systems.
# Author: Andreas Maunz

DIR=`pwd`

# Boot
. ./utils.sh || (echo "Utils could not be loaded, check opentox-ui.sh." 1>&2 && exit 1)
SELF=$(basename $0 -install)
check_log $SELF
[ "`id -u`" = "0" ] && echo "This script must not be run as root" 1>&2 && exit 1
check_utils "git make tar wget"

# Build
cd $OT_PREFIX/tmp/
cmd="$WGET $FOUR_STORE_URL/$FOUR_STORE_VER.tar.gz" && run_cmd "$cmd" "Download"
export FST=$OT_PREFIX/4S
cmd="$TAR xvzf $FOUR_STORE_VER.tar.gz" && run_cmd "$cmd" "Unpack"
rm $FOUR_STORE_VER.tar.gz
cd $FOUR_STORE_VER
cmd="./autogen.sh" && run_cmd "$cmd" "Autogen"
cmd="./configure --enable-dedup-insert --prefix=$FST --exec-prefix=$FST --with-storage-path=$FST/var/lib --with-config-file=$FST/$SELF.conf -with-http-log=$FST/log CFLAGS=-O2 CPPFLAGS=-O3" && run_cmd "$cmd" "Configure"
cmd="make" && run_cmd "$cmd" "Make"
cmd="make install" && run_cmd "$cmd" "Make Install"
#cmd="make test" && run_cmd "$cmd" "Make Test"

# Config
echo "if echo \"\$LD_LIBRARY_PATH\" | grep -v \"$FST/lib\">/dev/null 2>&1; then export LD_LIBRARY_PATH=\"\$LD_LIBRARY_PATH:$FST/lib\"; fi" >> "$FST_CONF"
if ! cat "$OT_DEFAULT_CONF" | grep "four_store">/dev/null 2>&1; then echo '$four_store = { :uri => "http://localhost:9088", :user => "user", :password => "pw" }' >> $OT_DEFAULT_CONF; fi

echo "$SELF configuration stored in '$FST_CONF'."
if ! grep "$FST_CONF" $OT_UI_CONF >/dev/null 2>&1; then
  echo '. '$FST_CONF >> $OT_UI_CONF
fi

mkdir -p $FST/log

# Testing code --- unused
#export LD_LIBRARY_PATH=$FST/lib
#cd $FST
#bin/4s-backend-setup test
#bin/4s-backend test
#bin/4s-httpd -D -H localhost -p 8000 test # -D only for testing

notify

# return to wd
cd $DIR
. ./utils.sh
cmd="$FST/bin/4s-backend-setup $BACKEND_NAME" && run_cmd "$cmd" "Create '$BACKEND_NAME' 4store backend"
