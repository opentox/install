#!/bin/sh

# Main Opentox-ruby install script
# Author: Christoph Helma, Andreas Maunz

[ "`id -u`" = "0" ] && echo "This script must not be run as root" 1>&2 && exit 1

SILENT=false
if [ -n "$1" ]
then
    if [ "$1" = "silent" ]
    then
        SILENT=true
    fi
fi

if [ $SILENT = false ]; then
  echo
  echo "OpenTox Ruby"
  echo "Hit <Return> If all services are stoppped, else hit <Ctrl+C>."
  read delete_me
fi

echo "Note: CONFIG (~/.opentox) will be backupped."
mkdir -p $OT_PREFIX/tmp/ >/dev/null 2>&1
DATE=`date +_%Y%m%d_%H_%M`
echo "Backups (if any):"
backup_targets="$HOME/.opentox $HOME/opentox-ruby"
for bt in $backup_targets; do
  if [ -f $bt ]; then
    mv -v --backup=numbered $bt $bt$DATE
  elif [ -d $bt ]; then
    mv -v --backup=numbered -T $bt $bt$DATE
  fi
done
echo "Backup finished."

. ./utils.sh

check_log `basename $0`
if [ $SILENT = false ]; then
  echo
  echo "Welcome to base installation for OpenTox compatible services on Ruby and Debian."
  echo "IMPORTANT: Hit <Ctrl+C> to adjust config.sh first (<Return> to continue)."
  read delete_me
fi

echo
echo -n "We need to do some privileged action. "
sudo echo -n ""
echo

[ -f $OT_PREFIX/install/utils.sh ] || (cmd="mkdir -p $OT_PREFIX/install && cp utils.sh $OT_PREFIX/install" && run_cmd "$cmd" "utils.sh => $OT_PREFIX/install")
[ -f $HOME/.opentox/config/install/config.sh ] || (cmd="mkdir -p $HOME/.opentox/config/install && cp config.sh $HOME/.opentox/config/install" && run_cmd "$cmd" "config.sh => $HOME/.opentox/config/install")
[ -f $OT_DEFAULT_CONF ] || (cmd="echo '\$aa = { :uri => nil }' > $OT_DEFAULT_CONF" && run_cmd "$cmd" "default.rb => $HOME/.opentox/config")

. ./base-install # Debian specific; disable this for others.
#./openbabel-install # Download, compile and build openbabel. Install to OT_PREFIX
./raptor2-install # Download, compile and build raptor2. Install to OT_PREFIX.
./rasqal-install # Download, compile and build rasqal. Install to OT_PREFIX.
./4store-install # Download, compile and build 4store. Install to OT_PREFIX.

check_utils "git"
#if [ ! -d ~/.rbenv ]; then
#  cmd="$GIT clone git://github.com/sstephenson/rbenv.git ~/.rbenv" && run_cmd "$cmd" "rbenv"
#else
#  echo "NOTE: 'rbenv' already installed. Leaving untouched."
#fi

#if ! grep "rbenv" $OT_UI_CONF >/dev/null 2>&1 ; then
#  echo 'if ! echo "$PATH" | grep "$HOME/.rbenv/bin">/dev/null 2>&1; then export PATH="$HOME/.rbenv/bin:$PATH"; eval "$(rbenv init -)"; fi' >> $OT_UI_CONF
#fi

[ -f $OT_TOOLS_CONF ] || (cmd="cp ot-tools-user.sh $OT_TOOLS_CONF" && run_cmd "$cmd" "ot-tools.sh => $HOME/.opentox")

# Install global ruby version
. ./utils.sh
#install_ruby global

if [ $SILENT = false ]; then
  notify
fi
